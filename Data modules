const mongoose = require('mongoose');

const userSchema = new mongoose.Schema({
  email: { type: String, required: true, unique: true },
  firstName: { type: String, required: true },
  lastName: { type: String, required: true },
  password: { type: String, required: true },
  // ... other user attributes
});

const blogSchema = new mongoose.Schema({
  title: { type: String, required: true, unique: true },
  description: { type: String },
  author: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },
  state: { type: String, enum: ['Draft', 'Published'], default: 'Draft' },
  readCount: { type: Number, default: 0 },
  readingTime: { type: Number, default: 0 }, // Calculated upon creation/update
  tags: { type: [String] },
  body: { type: String, required: true },
  timestamp: { type: Date, default: Date.now },
});

blogSchema.pre('save', async function (next) {
  if (this.isNew || this.isModified('body')) {
    const estimatedWords = this.body.split(/\s+/).length;
    this.readingTime = Math.ceil(estimatedWords / 200); // Adjust factor for accuracy
  }
  next();
});

module.exports = mongoose.model('User', userSchema);
module.exports = mongoose.model('Blog', blogSchema)
